<Activity mc:Ignorable="sap sap2010" x:Class="Main" mva:VisualBasic.Settings="{x:Null}" sap:VirtualizedContainerService.HintSize="749.333333333333,863.333333333333" sap2010:WorkflowViewState.IdRef="ActivityBuilder_1" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:av="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data" xmlns:str="clr-namespace:System.Text.RegularExpressions;assembly=System" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:upap="clr-namespace:UiPath.PDF.Activities.PDF;assembly=UiPath.PDF.Activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="31">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Text.RegularExpressions</x:String>
      <x:String>UiPath.PDF.Activities.PDF</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Activities.DynamicUpdate</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Runtime.InteropServices</x:String>
      <x:String>UiPath.PDF.Activities</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>System.Xml.Serialization</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="23">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>UiPath.CV</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.PDF.Activities</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Flowchart sap:VirtualizedContainerService.HintSize="759.333333333333,798.666666666667" sap2010:WorkflowViewState.IdRef="Flowchart_1">
    <Flowchart.Variables>
      <Variable x:TypeArguments="x:String" sap2010:Annotation.AnnotationText="Start select form for choose a folder where we will put files after splitting and save that folder path to the folderPath variable." Name="folderPath" />
      <Variable x:TypeArguments="sd:DataTable" Name="excelDataOutput" />
      <Variable x:TypeArguments="scg:Dictionary(x:String, x:String)" Name="employeeInfo" />
      <Variable x:TypeArguments="x:String" sap2010:Annotation.AnnotationText="Selected Excell file where we can find info about employees" Name="selectedExcelFile" />
      <Variable x:TypeArguments="x:String" sap2010:Annotation.AnnotationText="This is new created folder" Name="newFolderCreated" />
    </Flowchart.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <av:Point x:Key="ShapeLocation">270,2.5</av:Point>
        <av:Size x:Key="ShapeSize">60,74.6666666666667</av:Size>
        <x:Double x:Key="Width">725.01666666666665</x:Double>
        <x:Double x:Key="Height">763</x:Double>
        <av:PointCollection x:Key="ConnectorLocation">300,77.1666666666667 300,146</av:PointCollection>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <Flowchart.StartNode>
      <x:Reference>__ReferenceID1</x:Reference>
    </Flowchart.StartNode>
    <FlowStep x:Name="__ReferenceID1">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <av:Point x:Key="ShapeLocation">200,146</av:Point>
          <av:Size x:Key="ShapeSize">200,68</av:Size>
          <av:PointCollection x:Key="ConnectorLocation">300,214 300,270.666666666667</av:PointCollection>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <Sequence DisplayName="Split PDFs pages full code" sap:VirtualizedContainerService.HintSize="200,68" sap2010:WorkflowViewState.IdRef="Sequence_61">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <Sequence sap2010:Annotation.AnnotationText="Split a PDf file based on page and save that files into folder&#xA; " DisplayName="Split PDF based on pages" sap:VirtualizedContainerService.HintSize="376,1056.66666666667" sap2010:WorkflowViewState.IdRef="Sequence_51">
          <Sequence.Variables>
            <Variable x:TypeArguments="x:String" sap2010:Annotation.AnnotationText="Start Select file form. We choose pdf file which work with and save that file to the pdfFile variable." Name="pdfFile" />
            <Variable x:TypeArguments="x:String" sap2010:Annotation.AnnotationText="Read PDF file and save that file to the readPDF variable." Name="readPDF" />
            <Variable x:TypeArguments="scg:IEnumerable(str:Match)" sap2010:Annotation.AnnotationText="Check if Matches is true and save to the itIsMatches variable." Name="itIsMatches" />
            <Variable x:TypeArguments="x:Int32" sap2010:Annotation.AnnotationText="Save total pages number of PDF file which matches with criteria to the intTotalPages variable" Name="intTotalPages" />
            <Variable x:TypeArguments="x:Int32" sap2010:Annotation.AnnotationText="Save number of current page to the intCurrentPage variable." Default="1" Name="intCurrentPage" />
          </Sequence.Variables>
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
              <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ui:MessageBox Caption="{x:Null}" ChosenButton="{x:Null}" DisplayName="Message Box" sap:VirtualizedContainerService.HintSize="334,58.6666666666667" sap2010:WorkflowViewState.IdRef="MessageBox_2" Text="[&quot;Select PDF file&quot;]" />
          <ui:SelectFile sap2010:Annotation.AnnotationText="Select the PDF file and put it to the variable &quot;pdfFile&quot;" DisplayName="Select the PDF File" Filter="All files (*.*)|*.*" sap:VirtualizedContainerService.HintSize="334,66" sap2010:WorkflowViewState.IdRef="SelectFile_4" SelectedFile="[pdfFile]">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </ui:SelectFile>
          <ui:MessageBox Caption="{x:Null}" ChosenButton="{x:Null}" DisplayName="Message Box" sap:VirtualizedContainerService.HintSize="334,58.6666666666667" sap2010:WorkflowViewState.IdRef="MessageBox_3" Text="[&quot;Select folder where you want to save files&quot;]" />
          <ui:SelectFolder sap2010:Annotation.AnnotationText="Select a folder for Splitted PDF Files" DisplayName="Select Folder where you want to save files" sap:VirtualizedContainerService.HintSize="334,66" sap2010:WorkflowViewState.IdRef="SelectFolder_4" SelectedFolder="[folderPath]">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </ui:SelectFolder>
          <ui:MessageBox Caption="{x:Null}" ChosenButton="{x:Null}" DisplayName="Message Box" sap:VirtualizedContainerService.HintSize="334,58.6666666666667" sap2010:WorkflowViewState.IdRef="MessageBox_4" Text="[&quot;Select Excell file with employees info&quot;]" />
          <ui:SelectFile DisplayName="Select Excel file" Filter="All files (*.*)|*.*" sap:VirtualizedContainerService.HintSize="334,22" sap2010:WorkflowViewState.IdRef="SelectFile_6" SelectedFile="[selectedExcelFile]" />
          <ui:ReadPDFText PreserveFormatting="{x:Null}" DisplayName="Read PDF Text" FileName="[pdfFile]" sap:VirtualizedContainerService.HintSize="334,58.6666666666667" sap2010:WorkflowViewState.IdRef="ReadPDFText_7" Range="All" Text="[readPDF]">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </ui:ReadPDFText>
          <ui:Matches sap:VirtualizedContainerService.HintSize="334,58.6666666666667" sap2010:WorkflowViewState.IdRef="Matches_4" Input="[readPDF]" IsBuilderTabModified="False" Pattern="страна" RegexOption="IgnoreCase, Compiled" Result="[itIsMatches]">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </ui:Matches>
          <Assign sap:VirtualizedContainerService.HintSize="334,61.3333333333333" sap2010:WorkflowViewState.IdRef="Assign_40">
            <Assign.To>
              <OutArgument x:TypeArguments="x:Int32">[intTotalPages]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:Int32">[itIsMatches.Count]</InArgument>
            </Assign.Value>
          </Assign>
          <ui:InterruptibleWhile DisplayName="While" sap:VirtualizedContainerService.HintSize="334,52" sap2010:WorkflowViewState.IdRef="InterruptibleWhile_3">
            <ui:InterruptibleWhile.Body>
              <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="376,280" sap2010:WorkflowViewState.IdRef="Sequence_50">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <upap:ExtractPDFPageRange DisplayName="Extract PDF Page Range" FileName="[pdfFile]" sap:VirtualizedContainerService.HintSize="334,86.6666666666667" sap2010:WorkflowViewState.IdRef="ExtractPDFPageRange_7" OutputFileName="[folderPath + &quot;\&quot; + intCurrentPage.ToString  +   &quot;.pdf&quot;]" Range="[intCurrentPage.ToString]" />
                <Assign sap:VirtualizedContainerService.HintSize="334,61.3333333333333" sap2010:WorkflowViewState.IdRef="Assign_41">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:Int32">[intCurrentPage]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:Int32">[intCurrentPage + 1]</InArgument>
                  </Assign.Value>
                </Assign>
              </Sequence>
            </ui:InterruptibleWhile.Body>
            <ui:InterruptibleWhile.Condition>
              <mva:VisualBasicValue x:TypeArguments="x:Boolean" ExpressionText="intCurrentPage &lt;= intTotalPages" sap2010:WorkflowViewState.IdRef="VisualBasicValue`1_1" />
            </ui:InterruptibleWhile.Condition>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </ui:InterruptibleWhile>
        </Sequence>
        <Sequence sap2010:Annotation.AnnotationText="Check every PDF files for keyword and if found it save that file or merge it page with previous page." DisplayName="Check every single page of PDF" sap:VirtualizedContainerService.HintSize="200,144" sap2010:WorkflowViewState.IdRef="Sequence_58">
          <Sequence.Variables>
            <Variable x:TypeArguments="s:String[]" Name="pdfFileNames" />
            <Variable x:TypeArguments="s:String[]" Name="splitPdfFullPath" />
            <Variable x:TypeArguments="x:String" Name="fileName" />
            <Variable x:TypeArguments="x:Int32" Name="intFileName" />
            <Variable x:TypeArguments="scg:List(x:Int32)" Default="[new List(of Integer)]" Name="listFileNames" />
            <Variable x:TypeArguments="scg:List(x:Int32)" Name="sortListOfFileName" />
            <Variable x:TypeArguments="x:Int32" Name="totalNumberOfFileNames" />
            <Variable x:TypeArguments="x:String" Default="PDFs" Name="PDFsDirectory" />
            <Variable x:TypeArguments="x:String" sap2010:Annotation.AnnotationText="Save current date into this variable" Name="currentDate" />
          </Sequence.Variables>
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
              <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <Assign DisplayName="Collect all files from directory" sap:VirtualizedContainerService.HintSize="876.666666666667,61.3333333333333" sap2010:WorkflowViewState.IdRef="Assign_42">
            <Assign.To>
              <OutArgument x:TypeArguments="s:String[]">[pdfFileNames]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="s:String[]">[Directory.GetFiles( folderPath)]</InArgument>
            </Assign.Value>
          </Assign>
          <ui:ForEach x:TypeArguments="x:Object" CurrentIndex="{x:Null}" DisplayName="For Each file from pdfFilesNames" sap:VirtualizedContainerService.HintSize="876.666666666667,52" sap2010:WorkflowViewState.IdRef="ForEach`1_11" Values="[pdfFileNames]">
            <ui:ForEach.Body>
              <ActivityAction x:TypeArguments="x:Object">
                <ActivityAction.Argument>
                  <DelegateInArgument x:TypeArguments="x:Object" Name="item" />
                </ActivityAction.Argument>
                <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="304,594" sap2010:WorkflowViewState.IdRef="Sequence_52">
                  <Sequence.Variables>
                    <Variable x:TypeArguments="x:String" Name="splitPDF" />
                  </Sequence.Variables>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <Assign sap2010:Annotation.AnnotationText="Split array of splitted files and get file name to splitPdf" DisplayName="Split file" sap:VirtualizedContainerService.HintSize="262,105.333333333333" sap2010:WorkflowViewState.IdRef="Assign_43">
                    <Assign.To>
                      <OutArgument x:TypeArguments="s:String[]">[splitPdfFullPath]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="s:String[]">[Split( item.ToString, "\"c)]</InArgument>
                    </Assign.Value>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </Assign>
                  <Assign sap2010:Annotation.AnnotationText="Separate file of full path" DisplayName="Get file name with extention." sap:VirtualizedContainerService.HintSize="262,92" sap2010:WorkflowViewState.IdRef="Assign_44">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[splitPDF]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">[splitPdfFullPath( splitPdfFullPath.Length - 1)]</InArgument>
                    </Assign.Value>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </Assign>
                  <Assign DisplayName="Get file name from splitted file" sap:VirtualizedContainerService.HintSize="262,61.3333333333333" sap2010:WorkflowViewState.IdRef="Assign_45">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[fileName]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">[Split( splitPDF, "."c)(0)]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <Assign DisplayName="Convert file name to int" sap:VirtualizedContainerService.HintSize="262,61.3333333333333" sap2010:WorkflowViewState.IdRef="Assign_46">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:Int32">[intFileName]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:Int32">[Integer.Parse( fileName)]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <AddToCollection x:TypeArguments="x:Int32" Collection="[listFileNames]" DisplayName="Add To Collection" sap:VirtualizedContainerService.HintSize="262,22" sap2010:WorkflowViewState.IdRef="AddToCollection`1_2" Item="[intFileName]" />
                </Sequence>
              </ActivityAction>
            </ui:ForEach.Body>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </ui:ForEach>
          <Assign DisplayName="Sort list of int file name" sap:VirtualizedContainerService.HintSize="876.666666666667,61.3333333333333" sap2010:WorkflowViewState.IdRef="Assign_47">
            <Assign.To>
              <OutArgument x:TypeArguments="scg:List(x:Int32)">[sortListOfFileName]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="scg:List(x:Int32)">[listFileNames.OrderBy(function(x)x).ToList]</InArgument>
            </Assign.Value>
          </Assign>
          <Assign DisplayName="Number of sorted list of int file name" sap:VirtualizedContainerService.HintSize="876.666666666667,61.3333333333333" sap2010:WorkflowViewState.IdRef="Assign_48">
            <Assign.To>
              <OutArgument x:TypeArguments="x:Int32">[totalNumberOfFileNames]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:Int32">[sortListOfFileName.Count]</InArgument>
            </Assign.Value>
          </Assign>
          <Assign DisplayName="Assign current Date" sap:VirtualizedContainerService.HintSize="876.666666666667,61.3333333333333" sap2010:WorkflowViewState.IdRef="Assign_49">
            <Assign.To>
              <OutArgument x:TypeArguments="x:String">[currentDate]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:String">[DateTime.Now.ToString("dd.MMM.yyyy.(HH.mm.ss)")]</InArgument>
            </Assign.Value>
          </Assign>
          <If Condition="[Directory.Exists( folderPath + &quot;\&quot; + currentDate.ToString + &quot; &quot; + PDFsDirectory)]" DisplayName="Create folder for PDFs if not Exists" sap:VirtualizedContainerService.HintSize="522,425.333333333333" sap2010:WorkflowViewState.IdRef="If_4">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <If.Else>
              <Sequence sap:VirtualizedContainerService.HintSize="376,273.333333333333" sap2010:WorkflowViewState.IdRef="Sequence_53">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <Assign DisplayName="Create new folder and assign in variable " sap:VirtualizedContainerService.HintSize="334,61.3333333333333" sap2010:WorkflowViewState.IdRef="Assign_50">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[newFolderCreated]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">[folderPath + "\" + currentDate + " " + PDFsDirectory]</InArgument>
                  </Assign.Value>
                </Assign>
                <ui:CreateDirectory ContinueOnError="{x:Null}" DisplayName="Create Folder" sap:VirtualizedContainerService.HintSize="334,80" sap2010:WorkflowViewState.IdRef="CreateDirectory_2" Path="[newFolderCreated]" />
              </Sequence>
            </If.Else>
          </If>
          <ui:ForEach x:TypeArguments="x:Int32" CurrentIndex="{x:Null}" DisplayName="For Each" sap:VirtualizedContainerService.HintSize="876.666666666667,934.666666666667" sap2010:WorkflowViewState.IdRef="ForEach`1_12" Values="[sortListOfFileName]">
            <ui:ForEach.Body>
              <ActivityAction x:TypeArguments="x:Int32">
                <ActivityAction.Argument>
                  <DelegateInArgument x:TypeArguments="x:Int32" Name="file" />
                </ActivityAction.Argument>
                <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="840,797.333333333333" sap2010:WorkflowViewState.IdRef="Sequence_57">
                  <Sequence.Variables>
                    <Variable x:TypeArguments="x:String" Name="readCurrentFile" />
                    <Variable x:TypeArguments="x:String" Name="fileContainRS" />
                    <Variable x:TypeArguments="x:String" Name="fileNotContainRs" />
                    <Variable x:TypeArguments="s:String[]" Name="joinPDFs" />
                  </Sequence.Variables>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ui:ReadPDFText PreserveFormatting="{x:Null}" DisplayName="Read PDF Text" FileName="[folderPath + &quot;\&quot; + file.ToString + &quot;.pdf&quot;]" sap:VirtualizedContainerService.HintSize="798,58.6666666666667" sap2010:WorkflowViewState.IdRef="ReadPDFText_8" Range="All" Text="[readCurrentFile]" />
                  <If Condition="[readCurrentFile.ToUpper.Contains(&quot;РЕПУБЛИКА СРБИЈА&quot;)]" sap:VirtualizedContainerService.HintSize="798,606.666666666667" sap2010:WorkflowViewState.IdRef="If_5">
                    <If.Then>
                      <Sequence sap:VirtualizedContainerService.HintSize="376,372" sap2010:WorkflowViewState.IdRef="Sequence_55">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <Sequence sap:VirtualizedContainerService.HintSize="334,153.333333333333" sap2010:WorkflowViewState.IdRef="Sequence_54">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <Assign DisplayName="Assign if it contains content" sap:VirtualizedContainerService.HintSize="262,61.3333333333333" sap2010:WorkflowViewState.IdRef="Assign_51">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:String">[fileContainRS]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:String">[folderPath + "\" + file.ToString + ".pdf"]</InArgument>
                            </Assign.Value>
                          </Assign>
                        </Sequence>
                        <upap:ExtractPDFPageRange DisplayName="Extract PDF Page Range" FileName="[fileContainRS]" sap:VirtualizedContainerService.HintSize="334,86.6666666666667" sap2010:WorkflowViewState.IdRef="ExtractPDFPageRange_8" OutputFileName="[folderPath + &quot;\&quot; + currentDate + &quot; &quot; + PDFsDirectory + &quot;\&quot; + file.ToString + &quot;.pdf&quot;]" Range="All" />
                      </Sequence>
                    </If.Then>
                    <If.Else>
                      <Sequence sap:VirtualizedContainerService.HintSize="376,454.666666666667" sap2010:WorkflowViewState.IdRef="Sequence_56">
                        <Sequence.Variables>
                          <Variable x:TypeArguments="x:String" Name="previousValuePDF" />
                        </Sequence.Variables>
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <Assign DisplayName="Assign if it doesn't contain content " sap:VirtualizedContainerService.HintSize="334,61.3333333333333" sap2010:WorkflowViewState.IdRef="Assign_52">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[fileNotContainRs]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">[folderPath+ "\" + file.ToString + ".pdf"]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <Assign DisplayName="Assign previous value of PDF file" sap:VirtualizedContainerService.HintSize="334,61.3333333333333" sap2010:WorkflowViewState.IdRef="Assign_53">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[previousValuePDF]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">[folderPath + "\" + (file - 1).ToString + ".pdf"]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <Assign DisplayName="Assign prev and curent file into one file" sap:VirtualizedContainerService.HintSize="334,61.3333333333333" sap2010:WorkflowViewState.IdRef="Assign_54">
                          <Assign.To>
                            <OutArgument x:TypeArguments="s:String[]">[joinPDFs]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="s:String[]">[{previousValuePDF.ToString, fileNotContainRs.ToString }]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <upap:JoinPDF DisplayName="Join PDF Files" FileList="[joinPDFs]" sap:VirtualizedContainerService.HintSize="334,58.6666666666667" sap2010:WorkflowViewState.IdRef="JoinPDF_4" OutputFileName="[folderPath + &quot;\&quot; + currentDate + &quot; &quot; + PDFsDirectory + &quot;\&quot; + (file - 1).ToString + &quot;.pdf&quot;]" />
                      </Sequence>
                    </If.Else>
                  </If>
                </Sequence>
              </ActivityAction>
            </ui:ForEach.Body>
          </ui:ForEach>
        </Sequence>
        <Sequence DisplayName="Delete PDFs " sap:VirtualizedContainerService.HintSize="200,68" sap2010:WorkflowViewState.IdRef="Sequence_60">
          <Sequence.Variables>
            <Variable x:TypeArguments="s:String[]" Name="pdfFiles" />
          </Sequence.Variables>
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <Assign sap:VirtualizedContainerService.HintSize="305.333333333333,61.3333333333333" sap2010:WorkflowViewState.IdRef="Assign_55">
            <Assign.To>
              <OutArgument x:TypeArguments="s:String[]">[pdfFiles]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="s:String[]">[Directory.GetFiles( folderPath, "*.pdf")]</InArgument>
            </Assign.Value>
          </Assign>
          <ui:ForEach x:TypeArguments="x:Object" CurrentIndex="{x:Null}" DisplayName="For Each" sap:VirtualizedContainerService.HintSize="305.333333333333,251.333333333333" sap2010:WorkflowViewState.IdRef="ForEach`1_13" Values="[pdfFiles]">
            <ui:ForEach.Body>
              <ActivityAction x:TypeArguments="x:Object">
                <ActivityAction.Argument>
                  <DelegateInArgument x:TypeArguments="x:Object" Name="item" />
                </ActivityAction.Argument>
                <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="242,114" sap2010:WorkflowViewState.IdRef="Sequence_59">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ui:Delete ContinueOnError="{x:Null}" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="Delete_2" Path="[item.ToString]" />
                </Sequence>
              </ActivityAction>
            </ui:ForEach.Body>
          </ui:ForEach>
        </Sequence>
      </Sequence>
      <FlowStep.Next>
        <FlowStep x:Name="__ReferenceID0">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <av:Point x:Key="ShapeLocation">200,270.666666666667</av:Point>
              <av:Size x:Key="ShapeSize">200,98.6666666666667</av:Size>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <Sequence sap2010:Annotation.AnnotationText="Send a file to employees" DisplayName="Send Email" sap:VirtualizedContainerService.HintSize="347.333333333333,597.333333333333" sap2010:WorkflowViewState.IdRef="Sequence_63">
            <Sequence.Variables>
              <Variable x:TypeArguments="s:String[]" Name="pdfFileNames" />
            </Sequence.Variables>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <Assign DisplayName="Collect all files from directory" sap:VirtualizedContainerService.HintSize="305.333333333333,61.3333333333333" sap2010:WorkflowViewState.IdRef="Assign_56">
              <Assign.To>
                <OutArgument x:TypeArguments="s:String[]">[pdfFileNames]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="s:String[]">[Directory.GetFiles( newFolderCreated)]</InArgument>
              </Assign.Value>
            </Assign>
            <ui:ExcelApplicationScope Password="{x:Null}" DisplayName="Excel Application Scope" sap:VirtualizedContainerService.HintSize="305.333333333333,52" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_1" WorkbookPath="[selectedExcelFile]">
              <ui:ExcelApplicationScope.Body>
                <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                  <ActivityAction.Argument>
                    <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                  </ActivityAction.Argument>
                  <Sequence sap:VirtualizedContainerService.HintSize="418,604" sap2010:WorkflowViewState.IdRef="Sequence_81">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="376,554.666666666667" sap2010:WorkflowViewState.IdRef="Sequence_69">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ui:ExcelReadRange AddHeaders="True" DataTable="[excelDataOutput]" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="334,58.6666666666667" sap2010:WorkflowViewState.IdRef="ExcelReadRange_1" SheetName="Sheet1">
                        <ui:ExcelReadRange.Range>
                          <InArgument x:TypeArguments="x:String">
                            <Literal x:TypeArguments="x:String" Value="" />
                          </InArgument>
                        </ui:ExcelReadRange.Range>
                      </ui:ExcelReadRange>
                      <Assign sap:VirtualizedContainerService.HintSize="334,61.3333333333333" sap2010:WorkflowViewState.IdRef="Assign_60">
                        <Assign.To>
                          <OutArgument x:TypeArguments="scg:Dictionary(x:String, x:String)">[employeeInfo]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="scg:Dictionary(x:String, x:String)">[new Dictionary( Of String, String)]</InArgument>
                        </Assign.Value>
                      </Assign>
                      <ui:ForEachRow CurrentIndex="{x:Null}" DataTable="[excelDataOutput]" DisplayName="For Each Row" sap:VirtualizedContainerService.HintSize="334,262.666666666667" sap2010:WorkflowViewState.IdRef="ForEachRow_1">
                        <ui:ForEachRow.Body>
                          <ActivityAction x:TypeArguments="sd:DataRow">
                            <ActivityAction.Argument>
                              <DelegateInArgument x:TypeArguments="sd:DataRow" Name="row" />
                            </ActivityAction.Argument>
                            <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="242,114" sap2010:WorkflowViewState.IdRef="Sequence_68">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <AddToCollection x:TypeArguments="scg:KeyValuePair(x:String, x:String)" Collection="[employeeInfo]" DisplayName="Add To Collection" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="AddToCollection`1_3" Item="[new KeyValuePair( Of String, String)( row(1).ToString, row(2).ToString)]" />
                            </Sequence>
                          </ActivityAction>
                        </ui:ForEachRow.Body>
                      </ui:ForEachRow>
                    </Sequence>
                  </Sequence>
                </ActivityAction>
              </ui:ExcelApplicationScope.Body>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </ui:ExcelApplicationScope>
            <ui:ForEach x:TypeArguments="scg:KeyValuePair(x:String, x:String)" CurrentIndex="{x:Null}" DisplayName="For Each" sap:VirtualizedContainerService.HintSize="305.333333333333,281.333333333333" sap2010:WorkflowViewState.IdRef="ForEach`1_18" Values="[employeeInfo]">
              <ui:ForEach.Body>
                <ActivityAction x:TypeArguments="scg:KeyValuePair(x:String, x:String)">
                  <ActivityAction.Argument>
                    <DelegateInArgument x:TypeArguments="scg:KeyValuePair(x:String, x:String)" Name="employee" />
                  </ActivityAction.Argument>
                  <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="242,144" sap2010:WorkflowViewState.IdRef="Sequence_80">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ui:ForEach x:TypeArguments="x:String" CurrentIndex="{x:Null}" DisplayName="For Each" sap:VirtualizedContainerService.HintSize="600.666666666667,820.666666666667" sap2010:WorkflowViewState.IdRef="ForEach`1_17" Values="[pdfFileNames]">
                      <ui:ForEach.Body>
                        <ActivityAction x:TypeArguments="x:String">
                          <ActivityAction.Argument>
                            <DelegateInArgument x:TypeArguments="x:String" Name="item" />
                          </ActivityAction.Argument>
                          <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="564,683.333333333333" sap2010:WorkflowViewState.IdRef="Sequence_78">
                            <Sequence.Variables>
                              <Variable x:TypeArguments="x:String" Name="pdfContent" />
                              <Variable x:TypeArguments="x:String" Name="employeeInfo" />
                            </Sequence.Variables>
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <ui:ReadPDFText PreserveFormatting="{x:Null}" DisplayName="Read PDF Text" FileName="[item]" sap:VirtualizedContainerService.HintSize="522,58.6666666666667" sap2010:WorkflowViewState.IdRef="ReadPDFText_10" Range="All" Text="[pdfContent]" />
                            <If Condition="[pdfContent.ToUpper.Contains( employee.Key.ToUpper)]" sap:VirtualizedContainerService.HintSize="522,492.666666666667" sap2010:WorkflowViewState.IdRef="If_7">
                              <If.Then>
                                <Sequence sap:VirtualizedContainerService.HintSize="376,340.666666666667" sap2010:WorkflowViewState.IdRef="Sequence_77">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="334,62" sap2010:WorkflowViewState.IdRef="WriteLine_12" Text="[employee.Key + &quot; -&quot; + employee.Value + &quot;=&quot; + item]" />
                                  <ui:SendMail Bcc="{x:Null}" Cc="{x:Null}" MailMessage="{x:Null}" Name="{x:Null}" TimeoutMS="{x:Null}" Body="U prilogu Vam je poslat platni listić. Pozdrav" DisplayName="Send SMTP Mail Message" Email="marjandeveloper1@gmail.com" EnableSSL="True" From="marjandeveloper1@gmail.com" sap:VirtualizedContainerService.HintSize="334,146.666666666667" sap2010:WorkflowViewState.IdRef="SendMail_2" IsBodyHtml="False" Password="Mojposao1505." Port="465" SecureConnection="Auto" Server="smtp.gmail.com" Subject="Platni listic za februar" To="[employee.Value]">
                                    <ui:SendMail.Files>
                                      <scg:List x:TypeArguments="InArgument(x:String)" Capacity="4">
                                        <InArgument x:TypeArguments="x:String">
                                          <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="item" />
                                        </InArgument>
                                      </scg:List>
                                    </ui:SendMail.Files>
                                  </ui:SendMail>
                                </Sequence>
                              </If.Then>
                            </If>
                          </Sequence>
                        </ActivityAction>
                      </ui:ForEach.Body>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </ui:ForEach>
                  </Sequence>
                </ActivityAction>
              </ui:ForEach.Body>
            </ui:ForEach>
          </Sequence>
        </FlowStep>
      </FlowStep.Next>
    </FlowStep>
    <x:Reference>__ReferenceID0</x:Reference>
  </Flowchart>
</Activity>